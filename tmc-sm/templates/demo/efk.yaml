#@ load("@ytt:data", "data")
---
#! ytt -f templates/values-template.yaml -f templates/demo/efk.yaml | kubectl apply -f -
---
apiVersion: v1
kind: Namespace
metadata:
  name: tanzu-system-logging
  annotations:
    tkg.tanzu.vmware.com/tanzu-package: fluent-bit-packages
    kapp.k14s.io/update-strategy: "fallback-on-replace"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    tkg.tanzu.vmware.com/tanzu-package: fluent-bit-packages
    kapp.k14s.io/update-strategy: "fallback-on-replace"
  name: fluent-bit-packages-sa
  namespace: packages
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    tkg.tanzu.vmware.com/tanzu-package: fluent-bit-packages
    kapp.k14s.io/update-strategy: "fallback-on-replace"
  name: fluent-bit-packages-cluster-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    tkg.tanzu.vmware.com/tanzu-package: fluent-bit-packages
    kapp.k14s.io/update-strategy: "fallback-on-replace"
  name: fluent-bit-packages-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-packages-cluster-role
subjects:
- kind: ServiceAccount
  name: fluent-bit-packages-sa
  namespace: packages
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: tanzu-system-logging
  labels:
    app: elasticsearch
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: #@ "{}/apps/elasticsearch:7.2.1".format(data.values.harbor.fqdn)
        resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        env:
          - name: cluster.name
            value: k8s-logs
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: discovery.seed_hosts
            value: "elasticsearch-0.elasticsearch"
          - name: cluster.initial_master_nodes
            value: "elasticsearch-0"
          - name: ES_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
      initContainers:
      - name: fix-permissions
        image: #@ "{}/apps/bitnami-shell:10-debian-10-r138".format(data.values.harbor.fqdn)
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: #@ "{}/apps/bitnami-shell:10-debian-10-r138".format(data.values.harbor.fqdn)
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: #@ "{}/apps/bitnami-shell:10-debian-10-r138".format(data.values.harbor.fqdn)
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: elasticsearch
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 40Gi
---
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch
  namespace: tanzu-system-logging
  labels:
    app: elasticsearch
spec:
  selector:
    app: elasticsearch
  type: ClusterIP
  ports:
    - port: 9200
      name: rest
    - port: 9300
      name: inter-node
---
apiVersion: v1
stringData:
  values.yaml: |-
    ---
    namespace: "tanzu-system-logging"
    fluent_bit:
      config:
        service: |
          [SERVICE]
            Flush         1
            Log_Level     info
            Daemon        off
            Parsers_File  parsers.conf
            HTTP_Server   On
            HTTP_Listen   0.0.0.0
            HTTP_Port     2020
        outputs: |
          [OUTPUT]
            Name            es
            Match           *
            Host            elasticsearch
            Port            9200
            Generate_ID     On
            Logstash_Format On
            Logstash_Prefix logstash-
            Replace_Dots    On
            Retry_Limit     False
            Buffer_Size     False
            tls             Off
        inputs: |
          [INPUT]
            Name              tail
            Tag               kube.*
            Path              /var/log/containers/*.log
            Parser            cri
            DB                /var/log/flb_kube.db
            Mem_Buf_Limit     5MB
            Skip_Long_Lines   On
            Refresh_Interval  10
    
          [INPUT]
            Name                systemd
            Tag                 kube_systemd.*
            Path                /var/log/journal
            DB                  /var/log/flb_kube_systemd.db
            Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
            Systemd_Filter      _SYSTEMD_UNIT=containerd.service
            Read_From_Tail      On
            Strip_Underscores   On
        filters: |
          [FILTER]
            Name                kubernetes
            Match               kube.*
            Kube_URL            https://kubernetes.default.svc:443
            Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
            Kube_Tag_Prefix     kube.var.log.containers.
            Merge_Log           On
            Merge_Log_Key       log_processed
            K8S-Logging.Parser  On
            K8S-Logging.Exclude On
        parsers: |
          [PARSER]
            Name   apache
            Format regex
            Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
            Time_Key time
            Time_Format %d/%b/%Y:%H:%M:%S %z
    
          [PARSER]
            Name   apache2
            Format regex
            Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
            Time_Key time
            Time_Format %d/%b/%Y:%H:%M:%S %z
    
          [PARSER]
            Name   apache_error
            Format regex
            Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$
    
          [PARSER]
            Name   nginx
            Format regex
            Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
            Time_Key time
            Time_Format %d/%b/%Y:%H:%M:%S %z
    
          [PARSER]
            Name   json
            Format json
            Time_Key time
            Time_Format %d/%b/%Y:%H:%M:%S %z
    
          [PARSER]
            Name        docker
            Format      json
            Time_Key    time
            Time_Format %Y-%m-%dT%H:%M:%S.%L
            Time_Keep   On
    
          [PARSER]
            Name        docker-daemon
            Format      regex
            Regex       time="(?<time>[^ ]*)" level=(?<level>[^ ]*) msg="(?<msg>[^ ].*)"
            Time_Key    time
            Time_Format %Y-%m-%dT%H:%M:%S.%L
            Time_Keep   On
    
          [PARSER]
            Name cri
            Format regex
            Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
            Time_Key    time
            Time_Format %Y-%m-%dT%H:%M:%S.%L%z
    
          [PARSER]
            Name        logfmt
            Format      logfmt
    
          [PARSER]
            Name        syslog-rfc5424
            Format      regex
            Regex       ^\<(?<pri>[0-9]{1,5})\>1 (?<time>[^ ]+) (?<host>[^ ]+) (?<ident>[^ ]+) (?<pid>[-0-9]+) (?<msgid>[^ ]+) (?<extradata>(\[(.*)\]|-)) (?<message>.+)$
            Time_Key    time
            Time_Format %Y-%m-%dT%H:%M:%S.%L
            Time_Keep   On
    
          [PARSER]
            Name        syslog-rfc3164-local
            Format      regex
            Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
            Time_Key    time
            Time_Format %b %d %H:%M:%S
            Time_Keep   On
    
          [PARSER]
            Name        syslog-rfc3164
            Format      regex
            Regex       /^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
            Time_Key    time
            Time_Format %b %d %H:%M:%S
            Time_Format %Y-%m-%dT%H:%M:%S.%L
            Time_Keep   On
    
          [PARSER]
            Name    kube-custom
            Format  regex
            Regex   (?<tag>[^.]+)?\.?(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace_name>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$
        streams: ""
        plugins: ""
      daemonset:
        resources: {}
        podAnnotations: {}
        podLabels: {}
kind: Secret
metadata:
  name: fluent-bit-packages-values
  namespace: packages
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  annotations:
    tkg.tanzu.vmware.com/tanzu-package-ClusterRole: fluent-bit-packages-cluster-role
    tkg.tanzu.vmware.com/tanzu-package-ClusterRoleBinding: fluent-bit-packages-cluster-rolebinding
    tkg.tanzu.vmware.com/tanzu-package-Secret: fluent-bit-packages-values
    tkg.tanzu.vmware.com/tanzu-package-ServiceAccount: fluent-bit-packages-sa
    kapp.k14s.io/update-strategy: "fallback-on-replace"
    kapp.k14s.io/create-strategy: "fallback-on-replace"
  name: fluent-bit
  namespace: packages
spec:
  packageRef:
    refName: fluent-bit.tanzu.vmware.com
    versionSelection:
      constraints: 1.9.5+vmware.1-tkg.2
  serviceAccountName: fluent-bit-packages-sa
  values:
  - secretRef:
      name: fluent-bit-packages-values
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: tanzu-system-logging
  labels:
    app: kibana
spec:
  ports:
  - port: 5601
  selector:
    app: kibana
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: tanzu-system-logging
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: #@ "{}/apps/kibana:7.2.1".format(data.values.harbor.fqdn)
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        ports:
        - containerPort: 5601
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: elastic
  namespace: tanzu-system-logging
spec:
  commonName: #@ "elastic.{}".format(data.values.tld_domain)
  dnsNames:
  - #@ "elastic.{}".format(data.values.tld_domain)
  issuerRef:
    kind: ClusterIssuer
    name: local-issuer
  secretName: elastic-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kibana
  namespace: tanzu-system-logging
spec:
  commonName: #@ "kibana.{}".format(data.values.tld_domain)
  dnsNames:
  - #@ "kibana.{}".format(data.values.tld_domain)
  issuerRef:
    kind: ClusterIssuer
    name: local-issuer
  secretName: kibana-tls
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: elasticsearch
  namespace: tanzu-system-logging
spec:
  ingressClassName: tmc-local
  routes:
  - conditions:
    - prefix: /
    enableWebsockets: true
    services:
    - name: elasticsearch
      port: 9200
  virtualhost:
    fqdn: #@ "elastic.{}".format(data.values.tld_domain)
    tls:
      secretName: elastic-tls
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: kibana
  namespace: tanzu-system-logging
spec:
  ingressClassName: tmc-local
  routes:
  - conditions:
    - prefix: /
    enableWebsockets: true
    services:
    - name: kibana
      port: 5601
  virtualhost:
    fqdn: #@ "kibana.{}".format(data.values.tld_domain)
    tls:
      secretName: kibana-tls