#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: v1
data:
  corp-ca-1: #@ base64.encode(base64.encode(data.values.trustedCAs.ca))
kind: Secret
metadata:
  name: shared-user-trusted-ca-secret
  namespace: #@ "{}".format(data.values.shared_cluster.namespace)
type: Opaque
---
apiVersion: run.tanzu.vmware.com/v1alpha3
kind: KappControllerConfig
metadata:
  name: shared
  namespace: #@ "{}".format(data.values.shared_cluster.namespace)
spec:
  kappController:
    createNamespace: false
    config:
      caCerts: #@ "{}".format(data.values.trustedCAs.ca)
      dangerousSkipTLSVerify: ""
      httpProxy: ""
      httpsProxy: ""
      noProxy: ""
    deployment:
      apiPort: 10100
      concurrency: 4
      hostNetwork: true
      metricsBindAddress: "0"
      priorityClassName: system-cluster-critical
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
    globalNamespace: tkg-system
  namespace: tkg-system
---
apiVersion: run.tanzu.vmware.com/v1alpha3
kind: ClusterBootstrap
metadata:
  name: shared
  namespace: #@ "{}".format(data.values.shared_cluster.namespace)
  annotations:
    tkg.tanzu.vmware.com/add-missing-fields-from-tkr: #@ "{}".format(data.values.shared_cluster.k8s_version)
spec:
  kapp:
    refName: kapp-controller.tanzu.vmware.com.0.41.5+vmware.1-tkg.1
    valuesFrom:
      providerRef:
        apiGroup: run.tanzu.vmware.com
        kind: KappControllerConfig
        name: shared

---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: shared
  namespace: #@ "{}".format(data.values.shared_cluster.namespace)
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 172.20.0.0/16
    serviceDomain: cluster.local
    services:
      cidrBlocks:
      - 10.96.0.0/16
  topology:
    class: tanzukubernetescluster
    controlPlane:
      metadata:
        annotations:
          run.tanzu.vmware.com/resolve-os-image: os-name=photon,os-version=3,os-arch=amd64
      replicas: 1
    variables:
    - name: controlPlaneVolumes
      value:
      - capacity:
          storage: 10G
        mountPath: /var/lib/etcd
        name: etcd
        storageClass: #@ "{}".format(data.values.shared_cluster.storage)
    - name: nodePoolVolumes
      value:
      - capacity:
          storage: 60G
        mountPath: /var/lib/containerd
        name: containerd
        storageClass: #@ "{}".format(data.values.shared_cluster.storage)
    - name: vmClass
      value: best-effort-large
    - name: storageClass
      value: #@ "{}".format(data.values.shared_cluster.storage)
    - name: defaultStorageClass
      value: #@ "{}".format(data.values.shared_cluster.storage)
    - name: trust
      value:
        additionalTrustedCAs:
        - name: corp-ca-1
    version: #@ "{}".format(data.values.shared_cluster.k8s_version)
    workers:
      machineDeployments:
      - class: node-pool
        metadata:
          annotations:
            run.tanzu.vmware.com/resolve-os-image: os-name=photon,os-version=3,os-arch=amd64
        name: md-0
        replicas: 3
        variables:
          overrides:
          - name: vmClass
            value: best-effort-2xlarge
          - name: storageClass
            value: #@ "{}".format(data.values.shared_cluster.storage)
